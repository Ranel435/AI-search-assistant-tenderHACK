services:
  # Nginx
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro  # Сертификаты
    depends_on:
      - frontend
      - backend
      - llm_service
    restart: always

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8080/api
    depends_on:
      - backend

  # Backend
  backend:
    build: ./backend
    ports:
      - "8080:8080"
    environment:
      - SERVER_ADDRESS=:8080
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}
      - LLM_SERVICE_URL=${LLM_SERVICE_URL}
      - LLM_TIMEOUT=60  # Увеличьте таймаут для длинных запросов
      - LLM_MAX_TOKENS=1024
    depends_on:
      - postgres
      - llm_service
    restart: always
    volumes:
      - ./data:/app/data

  # База данных PostgreSQL
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    restart: always

  llm_service:
    build: ./llm_services
    ports:
      - "8000:8000"
    volumes:
      - ./llm_services:/app
    environment:
      - PYTHONUNBUFFERED=1
    restart: always

volumes:
  postgres_data:

